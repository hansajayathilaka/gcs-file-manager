apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  annotations:
    run.googleapis.com/ingress: all
spec:
  template:
    metadata:
      annotations:
        run.googleapis.com/cpu-throttling: "false"
        run.googleapis.com/cpu-allocation: "request"
        autoscaling.knative.dev/maxScale: "1"
        run.googleapis.com/memory: "1Gi"
        run.googleapis.com/cpu: "1000m"
    spec:
      containerConcurrency: 100
      timeoutSeconds: 300
      containers:
      - image: ${IMAGE_URL}
        ports:
        - containerPort: 3000
        env:
        # Firebase Configuration (Public)
        - name: NEXT_PUBLIC_FIREBASE_API_KEY
          value: "${NEXT_PUBLIC_FIREBASE_API_KEY}"
        - name: NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN
          value: "${NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN}"
        - name: NEXT_PUBLIC_FIREBASE_PROJECT_ID
          value: "${NEXT_PUBLIC_FIREBASE_PROJECT_ID}"
        - name: NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET
          value: "${NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET}"
        - name: NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID
          value: "${NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID}"
        - name: NEXT_PUBLIC_FIREBASE_APP_ID
          value: "${NEXT_PUBLIC_FIREBASE_APP_ID}"
        - name: NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID
          value: "${NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}"
        
        # Firebase Admin (Server-side only)
        - name: FIREBASE_SERVICE_ACCOUNT_KEY
          value: "${FIREBASE_SERVICE_ACCOUNT_KEY}"
        
        # Google Cloud Storage
        - name: GOOGLE_CLOUD_PROJECT_ID
          value: "${GOOGLE_CLOUD_PROJECT_ID}"
        
        # Allowed GCS Buckets
        - name: ALLOWED_BUCKETS
          value: "${ALLOWED_BUCKETS}"
        
        # Next Auth
        - name: NEXTAUTH_SECRET
          value: "${NEXTAUTH_SECRET}"
        - name: NEXTAUTH_URL
          value: "${NEXTAUTH_URL}"
        
        # Environment
        - name: NODE_ENV
          value: "production"
        
        resources:
          limits:
            cpu: "1000m"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
        
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
  traffic:
  - percent: 100
    latestRevision: true
