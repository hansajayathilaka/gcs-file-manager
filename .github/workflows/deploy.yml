name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID }}
  GAR_LOCATION: ${{ vars.GAR_LOCATION }}
  REPOSITORY: ${{ vars.GAR_REPOSITORY }}
  SERVICE: ${{ vars.CLOUD_RUN_SERVICE }}
  REGION: ${{ vars.CLOUD_RUN_REGION }}
  SERVICE_ACCOUNT: ${{ vars.CLOUD_RUN_SERVICE_ACCOUNT }}

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Build and Push Container
        run: |-
          docker build \
            --build-arg NEXT_PUBLIC_FIREBASE_API_KEY="${{ secrets.FIREBASE_API_KEY }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="${{ vars.FIREBASE_AUTH_DOMAIN }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID="${{ vars.FIREBASE_PROJECT_ID }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="${{ vars.FIREBASE_STORAGE_BUCKET }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="${{ vars.FIREBASE_MESSAGING_SENDER_ID }}" \
            --build-arg NEXT_PUBLIC_FIREBASE_APP_ID="${{ vars.FIREBASE_APP_ID }}" \
            --build-arg GOOGLE_CLOUD_PROJECT_ID="${{ env.PROJECT_ID }}" \
            --build-arg NEXTAUTH_SECRET="${{ secrets.NEXTAUTH_SECRET }}" \
            --build-arg NEXTAUTH_URL="${{ vars.NEXTAUTH_URL }}" \
            --build-arg ALLOWED_ORIGINS="${{ vars.ALLOWED_ORIGINS }}" \
            --build-arg NEXT_PUBLIC_DOMAIN="${{ vars.NEXT_PUBLIC_DOMAIN }}" \
            -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Update Cloud Run Service Spec
        run: |-
          cp cloudrun-service.yaml cloudrun-service-updated.yaml
          # Update image URL
          sed -i "s|IMAGE_URL_PLACEHOLDER|${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}|g" cloudrun-service-updated.yaml
          # Update service metadata
          sed -i "s|name: filemanager|name: ${{ env.SERVICE }}|g" cloudrun-service-updated.yaml
          sed -i "s|cloud.googleapis.com/location: us-central1|cloud.googleapis.com/location: ${{ env.REGION }}|g" cloudrun-service-updated.yaml
          # Update environment variables
          sed -i "s|FIREBASE_API_KEY_PLACEHOLDER|${{ secrets.FIREBASE_API_KEY }}|g" cloudrun-service-updated.yaml
          sed -i "s|FIREBASE_AUTH_DOMAIN_PLACEHOLDER|${{ vars.FIREBASE_AUTH_DOMAIN }}|g" cloudrun-service-updated.yaml
          sed -i "s|FIREBASE_PROJECT_ID_PLACEHOLDER|${{ vars.FIREBASE_PROJECT_ID }}|g" cloudrun-service-updated.yaml
          sed -i "s|FIREBASE_STORAGE_BUCKET_PLACEHOLDER|${{ vars.FIREBASE_STORAGE_BUCKET }}|g" cloudrun-service-updated.yaml
          sed -i "s|FIREBASE_MESSAGING_SENDER_ID_PLACEHOLDER|${{ vars.FIREBASE_MESSAGING_SENDER_ID }}|g" cloudrun-service-updated.yaml
          sed -i "s|FIREBASE_APP_ID_PLACEHOLDER|${{ vars.FIREBASE_APP_ID }}|g" cloudrun-service-updated.yaml
          sed -i "s|SERVICE_ACCOUNT_EMAIL_PLACEHOLDER|${{ env.SERVICE_ACCOUNT }}|g" cloudrun-service-updated.yaml
          sed -i "s|GCP_PROJECT_ID_PLACEHOLDER|${{ env.PROJECT_ID }}|g" cloudrun-service-updated.yaml
          sed -i "s|NEXTAUTH_SECRET_PLACEHOLDER|${{ secrets.NEXTAUTH_SECRET }}|g" cloudrun-service-updated.yaml
          sed -i "s|NEXTAUTH_URL_PLACEHOLDER|${{ vars.NEXTAUTH_URL }}|g" cloudrun-service-updated.yaml
          sed -i "s|ALLOWED_ORIGINS_PLACEHOLDER|${{ vars.ALLOWED_ORIGINS }}|g" cloudrun-service-updated.yaml
          sed -i "s|NEXT_PUBLIC_DOMAIN_PLACEHOLDER|${{ vars.NEXT_PUBLIC_DOMAIN }}|g" cloudrun-service-updated.yaml
          
          # Log the final spec file for debugging
          echo "=== Final Cloud Run Service Spec ==="
          cat cloudrun-service-updated.yaml
          echo "=== End of Spec File ==="

      - name: Deploy to Cloud Run
        id: deploy
        run: |-
          gcloud run services replace cloudrun-service-updated.yaml \
            --region=${{ env.REGION }} \
            --platform=managed

      - name: Set IAM Policy for Cloud Run
        run: |-
          # Grant authenticated users access to invoke the service
          # This complies with org policy that prevents disabling IAM invoker
          gcloud run services add-iam-policy-binding ${{ env.SERVICE }} \
            --region=${{ env.REGION }} \
            --member="allAuthenticatedUsers" \
            --role="roles/run.invoker"

      - name: Get Service URL
        run: |-
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE }} --region=${{ env.REGION }} --format="value(status.url)")
          echo "Service deployed at: $SERVICE_URL"